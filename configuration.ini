;
; Hardware Configuration File for Motion Estimation Engine
; Copyright (C) 2008 Jose Nunez-Yanez,  George Vafiadis
; 
; This is a sample configuration used by estimo compiler.
; You may change the settings to adapt the compiler's
; functionality to the motion estimation engine.
;

[General]
Version = "SharpEye Configuration 28-Aug-2009"

; the number of bits for a single instruction
Instruction-bits = 20              
     
; the number of bits for an op-code
opcode-bits      = 4                    

; the number of bits for a single coordinate in pattern memory
coordinate-bits  = 8                    

[Memory]
; Maximum Number of instructions:     <total-bits> = <Instruction-bits> * <program-memory-size>
; [instruction-1] ... [instruction-n]  n: program-memory-size
program-memory-size = 256  

; Pattern Memory Capacity:   <total-bits> =  (<coordinate-bits> + <coordinate-bits> ) * <point-memory-size>
; [X1, Y1] ... [Xn, Yn]   n: point-memory-size
point-memory-size = 256

[Reference Frame]
; The search area: points (X,Y) should be for X in [min-width, max-width] and for Y in [min-height, max-height]
; Note: the values are in decimal form and represent pixels
min-width  = -126
max-width  = 127
min-height = -126
max-height = 127

[Macroblock Frame]
; Note: the values are in decimal form and represent pixels
width  =  45
height =  45

[Instruction: Check full-pel Pattern]
; chk	   <number-of-points>,  <start-pattern-address>
opcode = 0000
start-pattern-address-bits = 8 
number-of-points-bits       = 8

[Instruction: Check fractional Pattern]
; chkfr   <number-of-points>, <start-pattern-address>
opcode = 0001
start-pattern-address-bits = 8 
number-of-points-bits      = 8

[Instruction: Check and Jump]
; chkjmp <winning-point>, <afterwin-program-address>
opcode = 0010
winning-point-bits              = 8
afterwin-program-address-bits   = 8

[Instruction: Unconditional jump] 
; b <program-address>
opcode = 0011
program-address-bits = 16

[Instruction: Halt]
; halt
opcode = 0000

[Registers]
COST   = 00   
LENGTH = 01   

[Instruction: Compare if reg Less than number]
; cmpl <register>, <number>
opcode = 0101
register-bits = 2
number-bits  = 14

[Instruction: Compare if reg greater than number]
; cmpg <register>, <number>
opcode = 0110
register-bits = 2
number-bits  = 14

[Instruction: Compare if reg is equal to number] 
; cmpe <register>, <number>
opcode = 0111
register-bits = 2
number-bits  = 14

[Instruction: Compare if reg is not equal to number]
; cmpne <register>, <number>
opcode = 1001
register-bits = 2
number-bits  = 14

[Instruction: Conditional jump]
; jmp <program-address>
opcode = 0100
program-address-bits = 16

[Instruction: Set mode for MVC]
;  mvc   <null 2-bits> <partition-mode 3-bits> <reference-frame 3-bits> <mvc 8-bits>
opcode = 1000
partition-mode  = 5 
reference-frame = 3
mvc = 8
